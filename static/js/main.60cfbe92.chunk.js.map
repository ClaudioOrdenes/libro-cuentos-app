{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["settings","infinite","dots","slidesToShow","arrows","slidesToScroll","lazyLoad","mobileFirst","centerMode","responsive","breakpoint","BotonTitulo","name","handleSetTitulo","TituloActivo","className","onClick","toUpperCase","App","useState","titulo","setTitulo","libroFiltrado","setLibroFiltrado","useEffect","data","BookContent","filter","libro","title","map","item","src","image","alt","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAOMA,EAAW,CACfC,UAAU,EACVC,MAAM,EACNC,aAAc,EACdC,QAAQ,EACRC,eAAgB,EAChBC,UAAU,EACVC,aAAa,EACbC,YAAY,EAEZC,WAAY,CACV,CACEC,WAAY,IACZV,SAAU,CACRI,QAAQ,EACRD,aAAc,EACdE,eAAgB,IAGpB,CACEK,WAAY,IACZV,SAAU,CACRI,QAAQ,EACRD,aAAc,EACdE,eAAgB,IAGpB,CACEK,WAAY,IACZV,SAAU,CACRI,QAAQ,EACRD,aAAc,EACdE,eAAgB,MA0DxB,IAAMM,EAAc,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,aAC5C,OACE,wBACEC,UAAS,iBAAYD,EAAe,SAAW,MAC/CE,QAAS,kBAAMH,EAAgBD,IAFjC,SAIGA,EAAKK,iBAKGC,EA/Df,WAAgB,IAAD,EACeC,mBAAS,QADxB,mBACNC,EADM,KACEC,EADF,OAE6BF,mBAAS,IAFtC,mBAENG,EAFM,KAESC,EAFT,KAab,OARAC,qBAAU,WAEJD,EADO,UAAXH,EACqBK,EAAKC,YAEpBD,EAAKC,YAAYC,QAAO,SAACC,GAAD,OAAWA,EAAMC,QAAUT,QAExD,CAACA,IAGF,sBAAKL,UAAU,MAAf,UACE,gCACE,cAAC,EAAD,CACEH,KAAK,oBACLE,aAAyB,sBAAXM,EACdP,gBAAiBQ,IAEnB,cAAC,EAAD,CACET,KAAK,kBACLE,aAAyB,oBAAXM,EACdP,gBAAiBQ,IAEnB,cAAC,EAAD,CACET,KAAK,aACLE,aAAyB,eAAXM,EACdP,gBAAiBQ,IAEnB,cAAC,EAAD,CACET,KAAK,WACLE,aAAyB,aAAXM,EACdP,gBAAiBQ,OAIrB,8BACE,cAAC,IAAD,2BAAYrB,GAAZ,aACGsB,EAAcQ,KAAI,SAACC,GAAD,OACjB,gCAEE,qBAAKhB,UAAU,QAAQiB,IAAG,UAAKD,EAAKE,OAASC,IAAI,KAAM,MAF/CH,EAAKI,gBC1EZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K","file":"static/js/main.60cfbe92.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport data from \"./data/data.json\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst settings = {\n  infinite: false,\n  dots: true,\n  slidesToShow: 1,\n  arrows: true,\n  slidesToScroll: 1,\n  lazyLoad: true,\n  mobileFirst: true,\n  centerMode: false,\n\n  responsive: [\n    {\n      breakpoint: 700,\n      settings: {\n        arrows: true,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n      },\n    },\n    {\n      breakpoint: 500,\n      settings: {\n        arrows: true,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n      },\n    },\n    {\n      breakpoint: 400,\n      settings: {\n        arrows: true,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n      },\n    },\n  ],\n};\n\nfunction App() {\n  const [titulo, setTitulo] = useState(\"null\");\n  const [libroFiltrado, setLibroFiltrado] = useState([]);\n  //const [slider, setSlider] = useState([]);\n\n  useEffect(() => {\n    titulo === \"todos\"\n      ? setLibroFiltrado(data.BookContent)\n      : setLibroFiltrado(\n          data.BookContent.filter((libro) => libro.title === titulo)\n        );\n  }, [titulo]);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <BotonTitulo\n          name=\"Rana de tres ojos\"\n          TituloActivo={titulo === \"Rana de tres ojos\" ? true : false}\n          handleSetTitulo={setTitulo}\n        />\n        <BotonTitulo\n          name=\"Pajaro Amarillo\"\n          TituloActivo={titulo === \"Pajaro Amarillo\" ? true : false}\n          handleSetTitulo={setTitulo}\n        />\n        <BotonTitulo\n          name=\"En Familia\"\n          TituloActivo={titulo === \"En Familia\" ? true : false}\n          handleSetTitulo={setTitulo}\n        />\n        <BotonTitulo\n          name=\"Leotolda\"\n          TituloActivo={titulo === \"Leotolda\" ? true : false}\n          handleSetTitulo={setTitulo}\n        />\n      </div>\n\n      <div>\n        <Slider {...settings}>\n          {libroFiltrado.map((item) => (\n            <div key={item.id}>\n              {/*imagenes filtradas del slider */}\n              <img className=\"image\" src={`${item.image}`} alt=\"\" />{\" \"}\n            </div>\n          ))}\n        </Slider>\n      </div>\n    </div>\n  );\n}\n\nconst BotonTitulo = ({ name, handleSetTitulo, TituloActivo }) => {\n  return (\n    <button\n      className={`titulo ${TituloActivo ? \"active\" : null}`}\n      onClick={() => handleSetTitulo(name)}\n    >\n      {name.toUpperCase()}\n    </button>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}